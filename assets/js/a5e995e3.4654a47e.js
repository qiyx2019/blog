"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1831],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var r=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,s=function(e,t){if(null==e)return{};var n,r,s={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,s=e.mdxType,i=e.originalType,c=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),m=l(n),g=s,d=m["".concat(c,".").concat(g)]||m[g]||u[g]||i;return n?r.createElement(d,o(o({ref:t},p),{},{components:n})):r.createElement(d,o({ref:t},p))}));function g(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var i=n.length,o=new Array(i);o[0]=m;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:s,o[1]=a;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8390:function(e,t,n){n.r(t),n.d(t,{contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return p}});var r=n(7462),s=n(3366),i=(n(7294),n(3905)),o=["components"],a={title:"\u5982\u4f55\u901a\u8fc7 RxJS \u5b9e\u73b0\u7b80\u5355\u7684\u6d88\u606f\u901a\u77e5\u673a\u5236",sidebar_position:4},c=void 0,l={unversionedId:"rx/2019-08-15-rxjs-notification",id:"rx/2019-08-15-rxjs-notification",title:"\u5982\u4f55\u901a\u8fc7 RxJS \u5b9e\u73b0\u7b80\u5355\u7684\u6d88\u606f\u901a\u77e5\u673a\u5236",description:"\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0[RxJS\uff1a\u5982\u4f55\u901a\u8fc7RxJS\u5b9e\u73b0\u7f13\u5b58]\u91cc\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728 Anuglar2+ \u4e2d\u7ed3\u5408 HttpClient \u548c ReplaySubject \u7f13\u5b58 API Response \u6570\u636e\uff0c\u51cf\u5c11\u91cd\u590d\u8c03\u7528 API \u4ece\u800c\u63d0\u9ad8\u6027\u80fd\uff0c\u8fd9\u79cd\u65b9\u6cd5\u9002\u7528\u4e8e\u6bcf\u6b21\u8fd4\u56de\u7684 Response \u6570\u636e\u90fd\u4e0d\u53d8\u7684\u5e38\u91cf API\u3002\u5728\u5b9e\u9645\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u8fd8\u6709\u4e00\u79cd API \u8fd4\u56de\u7684\u503c\u968f\u7740\u65f6\u95f4\u4f1a\u6709\u53d8\u5316\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u53bb\u66f4\u65b0 RxJS\u7f13\u5b58\u91cc\u7684\u503c\uff0c\u4ece\u7528\u6237\u4f53\u68c0\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u5148\u5728\u9875\u9762\u663e\u793a\u4e00\u4e2a\u6d88\u606f\u901a\u77e5\u7528\u6237\u6570\u636e\u6709\u66f4\u65b0\uff0c\u8ba9\u7528\u6237\u9009\u62e9\u662f\u5426\u9700\u8981\u66f4\u65b0\u9875\u9762\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5728\u6bcf\u6b21\u7f13\u5b58\u66f4\u65b0\u4ee5\u540e\u76f4\u63a5\u5237\u65b0\u9875\u9762\u6570\u636e\u3002\u63a5\u4e0b\u6765\u5c31\u6765\u4ecb\u7ecd\u5982\u4f55\u57fa\u4e8e RxJS \u5b9e\u73b0\u7b80\u5355\u7684\u6d88\u606f\u901a\u77e5\u673a\u5236\u3002",source:"@site/docs/rx/2019-08-15-rxjs-notification.md",sourceDirName:"rx",slug:"/rx/2019-08-15-rxjs-notification",permalink:"/blog/docs/rx/2019-08-15-rxjs-notification",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"\u5982\u4f55\u901a\u8fc7 RxJS \u5b9e\u73b0\u7b80\u5355\u7684\u6d88\u606f\u901a\u77e5\u673a\u5236",sidebar_position:4},sidebar:"rx",previous:{title:"\u5982\u4f55\u901a\u8fc7 RxJS \u5b9e\u73b0\u7f13\u5b58",permalink:"/blog/docs/rx/2019-08-12-rxjs-caching"},next:{title:"\u6240\u6709\u8ba2\u9605\u90fd\u9700\u8981\u8c03\u7528 unsubscribe \u53d6\u6d88\u8ba2\u9605\uff1f",permalink:"/blog/docs/rx/2019-08-16-rxjs-unsubscribe"}},p=[{value:"\u66f4\u65b0 RxJS \u7f13\u5b58",id:"\u66f4\u65b0-rxjs-\u7f13\u5b58",children:[],level:2},{value:"\u57fa\u4e8e RxJS \u7684\u7b80\u5355\u6d88\u606f\u901a\u77e5\u673a\u5236",id:"\u57fa\u4e8e-rxjs-\u7684\u7b80\u5355\u6d88\u606f\u901a\u77e5\u673a\u5236",children:[],level:2}],u={toc:p};function m(e){var t=e.components,n=(0,s.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"\u5728\u4e0a\u4e00\u7bc7\u6587\u7ae0","[RxJS\uff1a\u5982\u4f55\u901a\u8fc7RxJS\u5b9e\u73b0\u7f13\u5b58]","\u91cc\u4ecb\u7ecd\u4e86\u5982\u4f55\u5728 Anuglar2+ \u4e2d\u7ed3\u5408 HttpClient \u548c ReplaySubject \u7f13\u5b58 API Response \u6570\u636e\uff0c\u51cf\u5c11\u91cd\u590d\u8c03\u7528 API \u4ece\u800c\u63d0\u9ad8\u6027\u80fd\uff0c\u8fd9\u79cd\u65b9\u6cd5\u9002\u7528\u4e8e\u6bcf\u6b21\u8fd4\u56de\u7684 Response \u6570\u636e\u90fd\u4e0d\u53d8\u7684\u5e38\u91cf API\u3002\u5728\u5b9e\u9645\u5f00\u53d1\u8fc7\u7a0b\u4e2d\uff0c\u8fd8\u6709\u4e00\u79cd API \u8fd4\u56de\u7684\u503c\u968f\u7740\u65f6\u95f4\u4f1a\u6709\u53d8\u5316\uff0c\u8fd9\u4e2a\u65f6\u5019\u5c31\u9700\u8981\u53bb\u66f4\u65b0 RxJS\u7f13\u5b58\u91cc\u7684\u503c\uff0c\u4ece\u7528\u6237\u4f53\u68c0\u7684\u89d2\u5ea6\u51fa\u53d1\uff0c\u5148\u5728\u9875\u9762\u663e\u793a\u4e00\u4e2a\u6d88\u606f\u901a\u77e5\u7528\u6237\u6570\u636e\u6709\u66f4\u65b0\uff0c\u8ba9\u7528\u6237\u9009\u62e9\u662f\u5426\u9700\u8981\u66f4\u65b0\u9875\u9762\u5185\u5bb9\uff0c\u800c\u4e0d\u662f\u76f4\u63a5\u5728\u6bcf\u6b21\u7f13\u5b58\u66f4\u65b0\u4ee5\u540e\u76f4\u63a5\u5237\u65b0\u9875\u9762\u6570\u636e\u3002\u63a5\u4e0b\u6765\u5c31\u6765\u4ecb\u7ecd\u5982\u4f55\u57fa\u4e8e RxJS \u5b9e\u73b0\u7b80\u5355\u7684\u6d88\u606f\u901a\u77e5\u673a\u5236\u3002"),(0,i.kt)("blockquote",null,(0,i.kt)("p",null,"\u8fd9\u7bc7\u6587\u7ae0\u91cc\u7528\u5230\u7684",(0,i.kt)("font",{color:"#0000FF"}," RxJS \u7f13\u5b58"),"\u90fd\u662f\u6307\u5728 Anuglar2+ \u4e2d\u7ed3\u5408 HttpClient \u548c ReplaySubject \u7f13\u5b58 API Response \u6570\u636e\uff0c\u540e\u7eed\u65b0\u7684\u8ba2\u9605\u8005\u90fd\u53ef\u4ee5\u76f4\u63a5\u4ece ReplaySubject \u62ff API Response \u6570\u636e\u3002")),(0,i.kt)("h2",{id:"\u66f4\u65b0-rxjs-\u7f13\u5b58"},"\u66f4\u65b0 RxJS \u7f13\u5b58"),(0,i.kt)("p",null,"\u5173\u4e8e\u5728\u4ec0\u4e48\u65f6\u5019\u8981\u66f4\u65b0 RxJS \u7f13\u5b58\uff0c\u4e0d\u518d\u672c\u6587\u7ae0\u7684\u8ba8\u8bba\u8303\u56f4\u5185\uff0c\u5728\u8fd9\u91cc\u5c31\u76f4\u63a5\u6bcf\u969410\u79d2\u8c03\u7528\u4e00\u6b21 API\uff0c\u628a\u65b0\u62ff\u5230\u7684\u503c\u8d4b\u503c\u7ed9 RxJS \u7f13\u5b58\u3002"),(0,i.kt)("p",null,"\u8fd8\u662f\u7528 Github \u7684 get all users API\uff1a",(0,i.kt)("a",{parentName:"p",href:"https://developer.github.com/v3/users/#get-all-users"},"Github API"),"\uff0c\u6bcf10s\u53bb\u8c03\u7528\u8fd9\u4e2a API \u62ff\u523030\u4e2a\u4e0d\u540c\u7684 github \u7528\u6237\u4fe1\u606f\u3002\u7528 ","[interval]"," \u53ef\u4ee5\u5b9e\u73b0\u6bcf\u969410s\u8c03\u7528\u4e00\u6b21 API\uff0c\u4f46\u662f\u4f1a\u6709\u4e00\u4e2a\u95ee\u9898\uff0c\u7528\u6237\u5728\u7b2c\u4e00\u6b21\u8fdb\u5230\u9875\u9762\u7684\u65f6\u5019\u9700\u8981\u7b4910s\u624d\u80fd\u770b\u523030\u4f4d\u7528\u6237\u4fe1\u606f\u3002\u6211\u4eec\u5e0c\u671b\u7528\u6237\u7b2c\u4e00\u6b21\u8fdb\u5230\u9875\u9762\u7acb\u9a6c\u770b\u523030\u4f4d\u7528\u6237\u4fe1\u606f\uff0c\u4e4b\u540e\u662f\u6bcf\u969410s\u8c03\u7528\u4e00\u6b21API\u66f4\u65b030\u4f4d git \u7528\u6237\u4fe1\u606f\uff0c","[timer]","(\u64cd\u4f5c\u7b26\u53ef\u4ee5\u6ee1\u8db3\u8fd9\u4e2a\u8981\u6c42\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"timer(0,10000)"),"\u8868\u793a\u9996\u6b21\u4e0d\u7528\u7b49\u76f4\u63a5\u8c03\u7528 API \u62ff\u523030\u4f4d git \u7528\u6237\u4fe1\u606f\uff0c\u4e4b\u540e\u6bcf\u969410s\u8c03\u7528\u4e00\u6b21 API\u3002Service \u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'const CACHE_SIZE = 1;\nconst REFRESH_INTERVAL = 10000;\nconst API_ENDPOINT = "https://api.github.com/users?since=";\n@Injectable()\nexport class RxjsNotificationService {\n    private cacheUsers$: Observable<Array<User>>;\n    private userStartId: number = 0;\n\n    constructor(private http: HttpClient) { }\n\n    get users() {\n        if (!this.cacheUsers$) {\n            const timer$ = timer(0, REFRESH_INTERVAL);\n            this.cacheUsers$ = timer$\n                .pipe(\n                    switchMap(() => this.requestUsers()),\n                    shareReplay(CACHE_SIZE)\n                );\n        }\n        return this.cacheUsers$;\n    }\n\n    private requestUsers() {\n        this.userStartId = this.userStartId + 30;\n        return this.http.get<Array<User>>(API_ENDPOINT + this.userStartId)\n            .pipe(\n                map(respone => respone),\n                catchError(error => {\n                    console.log("something went wrong " + error)\n                    return of([]);\n                })\n            )\n    }\n}\n')),(0,i.kt)("p",null,"\u5b9a\u4e49\u4e00\u4e2a RxjsNotificationComponent\uff0c\u5177\u4f53\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'\n@Component({\n    templateUrl: "./rxjs-notification.component.html"\n\n})\n\nexport class RxjsNotificationComponent {\n    users$: Observable<Array<User>>;\n\n    constructor(private rxjsNotificationService: RxjsNotificationService) { }\n\n    ngOnInit() {\n        this.users$ = this.rxjsNotificationService.users.pipe();\n    }\n\n}\n')),(0,i.kt)("p",null,"rxjs-notification.component.html \u4ee3\u7801\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<div class="container" style="margin-top:30px;width: 40%;">\n    <div class="row justify-content-md-center">\n        <div style="margin: 10px;" class="card w-100" *ngFor="let user of users$ |async">\n            <div class="card-body">\n                <h5 class="card-title"><strong>User Name:</strong>  { { user.login } } </h5>\n                <p class="card-text"><strong>GitHub URL:</strong>  { { user.url } } </p>\n            </div>\n        </div>\n    </div>\n</div>\n')),(0,i.kt)("p",null,"\u8fd0\u884c\u4ee3\u7801\u53d1\u73b0\uff0c\u521a\u8fdb\u9875\u9762\u4f1a\u8c03\u7528\u4e00\u6b21 API\uff0c\u4e4b\u540e\u6bcf\u969410s\u4f1a\u53bb\u8c03\u7528\u4e00\u6b21 API \u66f4\u65b0 RxJs \u7f13\u5b58\uff0c\u9875\u9762\u7684\u7528\u6237\u4fe1\u606f\u4e5f\u662f\u6bcf\u969410\u79d2\u5c31\u4f1a\u66f4\u65b0\u3002\u8fd9\u4e2a\u7528\u6237\u4f53\u9a8c\u5e76\u4e0d\u597d\uff0c\u6211\u4eec\u4e0d\u5e0c\u671b\u7528\u6237\u5728\u6d4f\u89c8\u9875\u9762\u7684\u65f6\u5019\uff0c\u6bcf10s\u9875\u9762\u91cc\u7684\u4fe1\u606f\u5c31\u81ea\u52a8\u66f4\u65b0\u4e86\u3002\u800c\u662f\u5e0c\u671b\u5f39\u51fa\u4e00\u4e2a\u6d88\u606f\u901a\u77e5\u7528\u6237\u6709\u65b0\u7684\u7528\u6237\u4fe1\u606f\uff0c\u8ba9\u7528\u6237\u9009\u62e9\u662f\u5426\u9700\u8981\u66f4\u65b0\u9875\u9762\u5185\u5bb9\u3002"),(0,i.kt)("h2",{id:"\u57fa\u4e8e-rxjs-\u7684\u7b80\u5355\u6d88\u606f\u901a\u77e5\u673a\u5236"},"\u57fa\u4e8e RxJS \u7684\u7b80\u5355\u6d88\u606f\u901a\u77e5\u673a\u5236"),(0,i.kt)("p",null,"\u6211\u4eec\u5148\u6765\u7406\u4e00\u4e0b\u6574\u4e2a\u6d88\u606f\u901a\u77e5\u7684\u6d41\u7a0b\uff1a"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://limeii.github.io/assets/images/posts/rxjs/rxjs-notification01.png",alt:"rxjs-notification"}),'{:height="100%" width="100%"}'),(0,i.kt)("p",null,"\u5728\u6211\u4eec\u7684\u4f8b\u5b50\u4e2d\uff0c\u9875\u9762\u9700\u8981\u663e\u793a30\u4f4d github \u7528\u6237\u4fe1\u606f\u662f\u6570\u636e\u6d88\u8d39\u8005\uff08consumer\uff09\u3002"),(0,i.kt)("p",null,"\u5f53\u7528\u6237\u8fdb\u5230\u9875\u9762\uff080s\uff09\u7acb\u9a6c\u53bb\u8c03\u7528 API \u62ff\u523030\u4f4dgit\u7528\u6237\u4fe1\u606f\u653e\u5728 RxJS \u7f13\u5b58\u91cc\u5e76\u663e\u793a\u5728\u9875\u9762\u4e0a\uff0c\u4e4b\u540e\u6bcf\u969410s\u90fd\u4f1a\u53bb\u8c03\u7528\u4e00\u6b21 API \u62ff\u5230\u5168\u65b0\u768430\u4f4d github \u7528\u6237\u4fe1\u606f\u66f4\u65b0 RxJS \u7f13\u5b58\u91cc\u7684\u6570\u636e\u4f46\u4e0d\u66f4\u65b0\u9875\u9762\u663e\u793a\u7684\u6570\u636e\uff0c\u6b64\u65f6\u4f1a\u5728\u9875\u9762\u663e\u793a\u4e00\u4e2a\u6d88\u606f\u63d0\u9192\u7528\u6237\u6709\u65b0\u6570\u636e\u66f4\u65b0\uff0c\u5982\u679c\u7528\u6237\u70b9\u51fb\u66f4\u65b0\u6309\u94ae\uff0c\u63d0\u9192\u6d88\u606f\u4f1a\u6d88\u5931\u540c\u65f6\u65b0\u62ff\u5230\u7684\u7528\u6237\u4fe1\u606f\u4f1a\u66f4\u65b0\u5728\u9875\u9762\u4e0a\uff0c\u5982\u679c\u4e0d\u70b9\u51fb\u66f4\u65b0\u6309\u94ae\uff0c\u9875\u9762\u5217\u51fa\u7684 github \u7528\u6237\u4fe1\u606f\u4e0d\u66f4\u65b0\u3002"),(0,i.kt)("p",null,"\u6211\u4eec\u6765\u770b\u4e0b\u52a8\u56fe\u6548\u679c\uff1a"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://limeii.github.io/assets/images/posts/rxjs/rxjs-notification02.gif",alt:"rxjs-notification"}),'{:height="100%" width="100%"}'),(0,i.kt)("p",null,"\u5728\u524d\u9762\u5df2\u7ecf\u628a\u6bcf\u969410s\u53bb\u8c03\u7528\u4e00\u6b21 API \u7684 service \u5df2\u7ecf\u5199\u597d\u4e86\uff0c\u6211\u4eec\u53ea\u8981\u5728 component \u548c html \u9875\u9762\u91cc\uff0c\u628a\u5269\u4e0b\u7684\u4ee3\u7801\u5199\u5b8c\u3002"),(0,i.kt)("p",null,"\u9996\u5148\u9700\u8981\u62ff\u5230\u7b2c\u4e00\u6b21\u8fdb\u5165\u9875\u9762\uff0c\u4e5f\u5c31\u662f0s\u8c03\u7528 API \u62ff\u5230\u768430\u4f4d github \u7528\u6237\u4fe1\u606f\uff0c\u53ef\u4ee5\u901a\u8fc7",(0,i.kt)("a",{parentName:"p",href:"https://rxjs-cn.github.io/learn-rxjs-operators/operators/filtering/take.html"},"take(1)"),"\u64cd\u4f5c\u7b26\u62ff\u5230\u9875\u9762\u9996\u6b21\u52a0\u8f7d\u768430\u4f4d github \u7528\u6237\u4fe1\u606f\u3002\u518d\u5b9a\u4e49",(0,i.kt)("inlineCode",{parentName:"p"}," updateClick$ = new Subject<void>();"),"\u7528\u6237\u6bcf\u6b21\u70b9\u51fb\u66f4\u65b0\u6309\u94ae\uff0c\u4f1a\u518d\u53bb\u62ff\u5230\u6700\u540e\u4e00\u6b21API\u8fd4\u56de\u7684\u7528\u6237\u4fe1\u606f\uff0c\u7136\u540e\u5728\u901a\u8fc7 merge \u64cd\u4f5c\u7b26\u628a\u4e24\u4e2a Observable \u5408\u5e76\uff0c\u5177\u4f53\u4ee3\u7801\u53ef\u4ee5\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"    users$: Observable<Array<User>>;\n    updateClick$ = new Subject<void>();\n\n    constructor(private rxjsNotificationService: RxjsNotificationService) { }\n\n    ngOnInit() {\n        const initialUsers$ = this.getUserOnce();\n\n        const updateUsers$ = this.updateClick$.pipe(\n            mergeMap(() => this.getUserOnce())\n        );\n\n        this.users$ = merge(initialUsers$, updateUsers$);\n    }\n\n    getUserOnce() {\n        return this.rxjsNotificationService.users.pipe(take(1));\n    }\n")),(0,i.kt)("p",null,"\u9875\u9762\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<div class="container" style="margin-top:30px;width: 40%;">\n    <div class="row justify-content-md-center">\n        <div class="alert alert-warning w-100" role="alert">\n            <strong>Warning!</strong> new user infor available, please click to update!\n            <button type="button" style="margin-left: 20px;" class="btn btn-warning"\n                (click)="updateClick$.next()">Update</button>\n        </div>\n    </div>\n    <div class="row justify-content-md-center">\n        <div style="margin: 10px;" class="card w-100" *ngFor="let user of users$ |async">\n            <div class="card-body">\n                <h5 class="card-title"><strong>User Name:</strong>  { { user.login } } </h5>\n                <p class="card-text"><strong>GitHub URL:</strong>  { { user.url } } </p>\n            </div>\n        </div>\n    </div>\n</div>\n')),(0,i.kt)("p",null,"\u5173\u4e8e\u663e\u793a\u548c\u9690\u85cf\u66f4\u65b0\u6309\u94ae\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7",(0,i.kt)("a",{parentName:"p",href:"https://rxjs-cn.github.io/learn-rxjs-operators/operators/transformation/mapto.html"},"mapTo"),"\u5b9e\u73b0:"),(0,i.kt)("p",null,"component \u7684\u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { Component } from "@angular/core";\nimport { Observable, Subject, merge } from "rxjs";\n\nimport { User } from "./interface/rxjs-notification.interface";\n\nimport { RxjsNotificationService } from "./service/rxjs-notification.service";\nimport { take, mergeMap, skip, mapTo } from \'rxjs/operators\';\n\n@Component({\n    templateUrl: "./rxjs-notification.component.html"\n\n})\n\nexport class RxjsNotificationComponent {\n    users$: Observable<Array<User>>;\n    updateClick$ = new Subject<void>();\n    showNotificatoin$: Observable<boolean>;\n\n    constructor(private rxjsNotificationService: RxjsNotificationService) { }\n\n    ngOnInit() {\n        const initialUsers$ = this.getUserOnce();\n\n        const updateUsers$ = this.updateClick$.pipe(\n            mergeMap(() => this.getUserOnce())\n        );\n\n        this.users$ = merge(initialUsers$, updateUsers$);\n\n        const initNotification$ = this.getNotifications();\n        const show$ = initNotification$.pipe(mapTo(true));\n        const hide$ = this.updateClick$.pipe(mapTo(false));\n        this.showNotificatoin$ = merge(show$, hide$);\n\n    }\n\n    getUserOnce() {\n        return this.rxjsNotificationService.users.pipe(take(1));\n    }\n\n    getNotifications() {\n        return this.rxjsNotificationService.users.pipe(skip(1));\n    }\n}\n')),(0,i.kt)("p",null,"html \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<div class="container" style="margin-top:30px;width: 40%;">\n    <div class="row justify-content-md-center" *ngIf="showNotificatoin$ | async">\n        <div class="alert alert-warning w-100" role="alert">\n            <strong>Warning!</strong> new user infor available, please click to update!\n            <button type="button" style="margin-left: 20px;" class="btn btn-warning"\n                (click)="updateClick$.next()">Update</button>\n        </div>\n    </div>\n    <div class="row justify-content-md-center">\n        <div style="margin: 10px;" class="card w-100" *ngFor="let user of users$ |async">\n            <div class="card-body">\n                <h5 class="card-title"><strong>User Name:</strong>  { { user.login } } </h5>\n                <p class="card-text"><strong>GitHub URL:</strong>  { { user.url } } </p>\n            </div>\n        </div>\n    </div>\n</div>\n')),(0,i.kt)("p",null,"service \u5b8c\u6574\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},'import { Injectable } from "@angular/core";\nimport { HttpClient } from "@angular/common/http";\n\nimport { User } from "../interface/rxjs-notification.interface";\nimport { map, catchError, shareReplay, switchMap } from \'rxjs/operators\';\nimport { of, Observable, timer } from \'rxjs\';\n\n\nconst CACHE_SIZE = 1;\nconst REFRESH_INTERVAL = 10000;\nconst API_ENDPOINT = "https://api.github.com/users?since=";\n\n@Injectable()\n\nexport class RxjsNotificationService {\n\n    private cacheUsers$: Observable<Array<User>>;\n    private userStartId: number = 0;\n\n    constructor(private http: HttpClient) { }\n\n    get users() {\n        if (!this.cacheUsers$) {\n            const timer$ = timer(0, REFRESH_INTERVAL);\n            this.cacheUsers$ = timer$\n                .pipe(\n                    switchMap(() => this.requestUsers()),\n                    shareReplay(CACHE_SIZE)\n                );\n        }\n        return this.cacheUsers$;\n    }\n\n    private requestUsers() {\n        this.userStartId = this.userStartId + 30;\n        return this.http.get<Array<User>>(API_ENDPOINT + this.userStartId)\n            .pipe(\n                map(respone => respone),\n                catchError(error => {\n                    console.log("something went wrong " + error)\n                    return of([]);\n                })\n            )\n    }\n\n}\n')))}m.isMDXComponent=!0}}]);